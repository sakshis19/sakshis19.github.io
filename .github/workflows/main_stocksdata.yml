# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure Functions: https://aka.ms/python-webapps-actions

name: Build and deploy Python project to Azure Function App - stocksdata

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      # --- CRITICAL CHANGE: This is the most direct way to zip the correct structure ---
      # This command zips the 'stocksdata' folder and 'requirements.txt' directly from the root of the repo.
      # If you have a host.json at the repo root, add it to this command.
      - name: Zip artifact for deployment
        run: |
          # Assuming 'stocksdata' folder and 'requirements.txt' are at the root of your repo
          # And host.json might also be at the root.
          # If host.json exists at your repo root (STOCKSDATAA/host.json), uncomment the 'host.json' part
          zip -r release.zip stocksdata requirements.txt # Add host.json here if it exists at repo root: host.json
          
          # Example if host.json is at root:
          # zip -r release.zip stocksdata requirements.txt host.json

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip # Upload only the specific zip file created

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: . # Download the artifact (release.zip) to the current directory
        
      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'stocksdata'
          slot-name: 'Production'
          package: 'release.zip' # Deploy the specific zip file directly
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BBF2DB12F4B248C4B07678EFD2245F63 }}
